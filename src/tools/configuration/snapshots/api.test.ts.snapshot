exports[`configuration API > mergeConfigWithResources > should correctly merge resources when no conflicts exist 1`] = `
{
  "title": "[mcp] created resources",
  "fastDataConfig": {
    "collections": []
  },
  "microfrontendPluginsConfig": {
    "plugins": []
  },
  "extensionsConfig": {
    "files": {}
  },
  "config": {
    "groups": [],
    "secrets": [],
    "cmsCategories": {},
    "cmsSettings": {
      "accessGroupsExpression": ""
    },
    "cmsDashboard": [],
    "decorators": {},
    "endpoints": {},
    "collections": {},
    "cmsAnalytics": {},
    "services": {
      "existing-service": {
        "name": "existing-service",
        "type": "custom",
        "dockerImage": "existing-image",
        "replicas": 1,
        "advanced": false
      },
      "new-service": {
        "name": "new-service",
        "type": "custom",
        "dockerImage": "new-image",
        "replicas": 1,
        "advanced": false
      }
    },
    "configMaps": {
      "existing-config-map": {
        "name": "existing-config-map",
        "files": [
          {
            "name": "key1",
            "content": "value1"
          }
        ]
      },
      "new-config-map": {
        "name": "new-config-map",
        "files": [
          {
            "name": "key2",
            "content": "value2"
          }
        ]
      }
    },
    "serviceAccounts": {
      "existing-service-account": {
        "name": "existing-service-account"
      },
      "new-service-account": {
        "name": "new-service-account"
      }
    },
    "listeners": {
      "existing-listener": {
        "name": "existing-listener",
        "port": 8080
      },
      "new-listener": {
        "name": "new-listener",
        "port": 8081
      }
    },
    "fastDataConfig": {
      "collections": []
    },
    "microfrontendPluginsConfig": {
      "plugins": []
    },
    "extensionsConfig": {
      "files": {}
    },
    "enabledFeatures": [],
    "commitId": "commit123",
    "serviceSecrets": {}
  },
  "previousSave": "commit123",
  "deletedElements": {}
}
`;

exports[`configuration API > mergeConfigWithResources > should handle missing optional properties gracefully 1`] = `
{
  "title": "[mcp] created resources",
  "fastDataConfig": {
    "collections": []
  },
  "microfrontendPluginsConfig": {},
  "extensionsConfig": {
    "files": {}
  },
  "config": {
    "groups": [],
    "secrets": [],
    "cmsCategories": {},
    "cmsSettings": {
      "accessGroupsExpression": ""
    },
    "cmsDashboard": [],
    "decorators": {},
    "endpoints": {},
    "collections": {},
    "cmsAnalytics": {},
    "services": {
      "existing-service": {
        "name": "existing-service",
        "type": "custom",
        "dockerImage": "existing-image",
        "replicas": 1,
        "advanced": false
      },
      "new-service": {
        "name": "new-service",
        "type": "custom",
        "dockerImage": "new-image",
        "replicas": 1,
        "advanced": false
      }
    },
    "configMaps": {},
    "serviceAccounts": {},
    "listeners": {},
    "fastDataConfig": {
      "collections": []
    },
    "commitId": "commit123",
    "serviceSecrets": {}
  },
  "previousSave": "commit123",
  "deletedElements": {}
}
`;
